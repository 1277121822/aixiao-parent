<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.djb.aixiao.mapper.TbWorkMapper" >
  <resultMap id="BaseResultMap" type="com.djb.aixiao.pojo.TbWork" >
    <id column="work_id" property="workId" jdbcType="VARCHAR" />
    <result column="work_name" property="workName" jdbcType="VARCHAR" />
    <result column="collect_type" property="collectType" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="close_time" property="closeTime" jdbcType="TIMESTAMP" />
    <result column="classes_id" property="classesId" jdbcType="BIGINT" />
    <result column="cid" property="cid" jdbcType="BIGINT" />
    <result column="student_message" property="studentMessage" jdbcType="VARCHAR" />
    <result column="work_desc" property="workDesc" jdbcType="VARCHAR" />
    <result column="publish_nick" property="publishNick" jdbcType="VARCHAR" />
    <result column="reference_file_name" property="referenceFileName" jdbcType="VARCHAR" />
    <result column="reference_file_path" property="referenceFilePath" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    work_id, work_name, collect_type, status, create_time, update_time, end_time, close_time, 
    classes_id, cid, student_message, work_desc, publish_nick, reference_file_name, reference_file_path
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.djb.aixiao.pojo.TbWorkExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_work
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from tb_work
    where work_id = #{workId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from tb_work
    where work_id = #{workId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.djb.aixiao.pojo.TbWorkExample" >
    delete from tb_work
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.djb.aixiao.pojo.TbWork" >
    insert into tb_work (work_id, work_name, collect_type, 
      status, create_time, update_time, 
      end_time, close_time, classes_id, 
      cid, student_message, work_desc, 
      publish_nick, reference_file_name, reference_file_path
      )
    values (#{workId,jdbcType=VARCHAR}, #{workName,jdbcType=VARCHAR}, #{collectType,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{closeTime,jdbcType=TIMESTAMP}, #{classesId,jdbcType=BIGINT}, 
      #{cid,jdbcType=BIGINT}, #{studentMessage,jdbcType=VARCHAR}, #{workDesc,jdbcType=VARCHAR}, 
      #{publishNick,jdbcType=VARCHAR}, #{referenceFileName,jdbcType=VARCHAR}, #{referenceFilePath,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.djb.aixiao.pojo.TbWork" >
    insert into tb_work
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="workId != null" >
        work_id,
      </if>
      <if test="workName != null" >
        work_name,
      </if>
      <if test="collectType != null" >
        collect_type,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="closeTime != null" >
        close_time,
      </if>
      <if test="classesId != null" >
        classes_id,
      </if>
      <if test="cid != null" >
        cid,
      </if>
      <if test="studentMessage != null" >
        student_message,
      </if>
      <if test="workDesc != null" >
        work_desc,
      </if>
      <if test="publishNick != null" >
        publish_nick,
      </if>
      <if test="referenceFileName != null" >
        reference_file_name,
      </if>
      <if test="referenceFilePath != null" >
        reference_file_path,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="workId != null" >
        #{workId,jdbcType=VARCHAR},
      </if>
      <if test="workName != null" >
        #{workName,jdbcType=VARCHAR},
      </if>
      <if test="collectType != null" >
        #{collectType,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="closeTime != null" >
        #{closeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="classesId != null" >
        #{classesId,jdbcType=BIGINT},
      </if>
      <if test="cid != null" >
        #{cid,jdbcType=BIGINT},
      </if>
      <if test="studentMessage != null" >
        #{studentMessage,jdbcType=VARCHAR},
      </if>
      <if test="workDesc != null" >
        #{workDesc,jdbcType=VARCHAR},
      </if>
      <if test="publishNick != null" >
        #{publishNick,jdbcType=VARCHAR},
      </if>
      <if test="referenceFileName != null" >
        #{referenceFileName,jdbcType=VARCHAR},
      </if>
      <if test="referenceFilePath != null" >
        #{referenceFilePath,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.djb.aixiao.pojo.TbWorkExample" resultType="java.lang.Integer" >
    select count(*) from tb_work
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_work
    <set >
      <if test="record.workId != null" >
        work_id = #{record.workId,jdbcType=VARCHAR},
      </if>
      <if test="record.workName != null" >
        work_name = #{record.workName,jdbcType=VARCHAR},
      </if>
      <if test="record.collectType != null" >
        collect_type = #{record.collectType,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null" >
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.closeTime != null" >
        close_time = #{record.closeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.classesId != null" >
        classes_id = #{record.classesId,jdbcType=BIGINT},
      </if>
      <if test="record.cid != null" >
        cid = #{record.cid,jdbcType=BIGINT},
      </if>
      <if test="record.studentMessage != null" >
        student_message = #{record.studentMessage,jdbcType=VARCHAR},
      </if>
      <if test="record.workDesc != null" >
        work_desc = #{record.workDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.publishNick != null" >
        publish_nick = #{record.publishNick,jdbcType=VARCHAR},
      </if>
      <if test="record.referenceFileName != null" >
        reference_file_name = #{record.referenceFileName,jdbcType=VARCHAR},
      </if>
      <if test="record.referenceFilePath != null" >
        reference_file_path = #{record.referenceFilePath,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_work
    set work_id = #{record.workId,jdbcType=VARCHAR},
      work_name = #{record.workName,jdbcType=VARCHAR},
      collect_type = #{record.collectType,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      close_time = #{record.closeTime,jdbcType=TIMESTAMP},
      classes_id = #{record.classesId,jdbcType=BIGINT},
      cid = #{record.cid,jdbcType=BIGINT},
      student_message = #{record.studentMessage,jdbcType=VARCHAR},
      work_desc = #{record.workDesc,jdbcType=VARCHAR},
      publish_nick = #{record.publishNick,jdbcType=VARCHAR},
      reference_file_name = #{record.referenceFileName,jdbcType=VARCHAR},
      reference_file_path = #{record.referenceFilePath,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.djb.aixiao.pojo.TbWork" >
    update tb_work
    <set >
      <if test="workName != null" >
        work_name = #{workName,jdbcType=VARCHAR},
      </if>
      <if test="collectType != null" >
        collect_type = #{collectType,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="closeTime != null" >
        close_time = #{closeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="classesId != null" >
        classes_id = #{classesId,jdbcType=BIGINT},
      </if>
      <if test="cid != null" >
        cid = #{cid,jdbcType=BIGINT},
      </if>
      <if test="studentMessage != null" >
        student_message = #{studentMessage,jdbcType=VARCHAR},
      </if>
      <if test="workDesc != null" >
        work_desc = #{workDesc,jdbcType=VARCHAR},
      </if>
      <if test="publishNick != null" >
        publish_nick = #{publishNick,jdbcType=VARCHAR},
      </if>
      <if test="referenceFileName != null" >
        reference_file_name = #{referenceFileName,jdbcType=VARCHAR},
      </if>
      <if test="referenceFilePath != null" >
        reference_file_path = #{referenceFilePath,jdbcType=VARCHAR},
      </if>
    </set>
    where work_id = #{workId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.djb.aixiao.pojo.TbWork" >
    update tb_work
    set work_name = #{workName,jdbcType=VARCHAR},
      collect_type = #{collectType,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      close_time = #{closeTime,jdbcType=TIMESTAMP},
      classes_id = #{classesId,jdbcType=BIGINT},
      cid = #{cid,jdbcType=BIGINT},
      student_message = #{studentMessage,jdbcType=VARCHAR},
      work_desc = #{workDesc,jdbcType=VARCHAR},
      publish_nick = #{publishNick,jdbcType=VARCHAR},
      reference_file_name = #{referenceFileName,jdbcType=VARCHAR},
      reference_file_path = #{referenceFilePath,jdbcType=VARCHAR}
    where work_id = #{workId,jdbcType=VARCHAR}
  </update>
</mapper>